package main;

import java.io.IOException;
import java.util.Locale;
import java.util.ResourceBundle;

import javax.ejb.Local;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Modality;
import javafx.stage.Stage;
import main.controller.FuneralRegistrationController;
import main.controller.NewPersonDialogController;
import main.controller.SchemeOverviewController;
import main.controller.SchemeOverviewDialogController;
import model.people.Owner;
import model.people.Person;
import model.places.Grave;
import util.FacadeRemoteUtil;


public class MainApp extends Application {

	private Stage primaryStage;
    private AnchorPane mainWindow;
    
    private FacadeRemoteUtil facadeRemoteUtil;
    
    private ResourceBundle resourceBundle;
    private SchemeOverviewController schemeOverviewController = new SchemeOverviewController(this);
	private FuneralRegistrationController funeralRegistrationController = new FuneralRegistrationController(this);
    
    public MainApp(){
    }
    
	@Override
	public void start(Stage primaryStage) {
		this.primaryStage = primaryStage;
		this.primaryStage.setTitle("GraveyardApp");
		initMainWindow();
	}
	
	public void initMainWindow(){
		
		setFacadeRemoteUtil(new FacadeRemoteUtil());
		
		try{
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("view/SchemeOverviewPane.fxml"));
			loader.setController(schemeOverviewController);
            mainWindow = (AnchorPane) loader.load();
			Scene scene = new Scene(mainWindow);
			primaryStage.setScene(scene);
			primaryStage.show();
		} catch (IOException e){
			e.printStackTrace();
		}
	}
	
	public void initLanguage(){
		String language = Locale.getDefault().getLanguage();
		
		if (language == "SK") {
			setResourceBundle(ResourceBundle.getBundle("Text_sk", Locale.getDefault()));
		} else {
			setResourceBundle(ResourceBundle.getBundle("Text", Locale.getDefault()));
		}
	}
	
	public void closePrimaryStage(){
		primaryStage.close();
	}

	public boolean showFuneralRegistrationDialog(Grave grave){
		try {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("view/FuneralRegistrationPane.fxml"));
			loader.setController(funeralRegistrationController);
			AnchorPane pane;
			pane = loader.load();
			
			Stage dialogStage = new Stage();
			dialogStage.initModality(Modality.WINDOW_MODAL);
			dialogStage.initOwner(primaryStage);
			
			Scene scene = new Scene(pane);
			dialogStage.setScene(scene);
			
			funeralRegistrationController.setGrave(grave);
			funeralRegistrationController.setDialogStage(dialogStage);
			
			dialogStage.showAndWait();
			
			return funeralRegistrationController.isOkClicked();
		} catch (IOException e) {
			e.printStackTrace();
			return false;
		}
	}

	public boolean showSectorChangeDialog(Object object, boolean change){
		try{
			SchemeOverviewDialogController schemeOverviewDialogController = new SchemeOverviewDialogController(this);
			schemeOverviewDialogController.setObject(object);
			schemeOverviewDialogController.setChange(change);
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("view/SchemeOverviewDialog.fxml"));
			loader.setController(schemeOverviewDialogController);
			AnchorPane pane = loader.load();
			
			Stage dialogStage = new Stage();
			dialogStage.initModality(Modality.WINDOW_MODAL);
            dialogStage.initOwner(primaryStage);
            
            Scene scene = new Scene(pane);
            dialogStage.setScene(scene);
            
            schemeOverviewDialogController.setDialogStage(dialogStage);
			
			dialogStage.showAndWait();
			
			return schemeOverviewDialogController.isOkClicked();
		} catch(IOException e){
			e.printStackTrace();
			return false;
		}
	}
	
	public boolean showNewPersonDialog(Person person, boolean classType){
		try{
			NewPersonDialogController newPersonDialogController = new NewPersonDialogController(this);
			newPersonDialogController.setPerson(person);
			newPersonDialogController.setPersonClass(classType);
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("view/NewPersonDialog.fxml"));
			loader.setController(newPersonDialogController);
			AnchorPane pane = loader.load();
			
			Stage dialogStage = new Stage();
			dialogStage.initModality(Modality.WINDOW_MODAL);
            dialogStage.initOwner(primaryStage);
            
            Scene scene = new Scene(pane);
            dialogStage.setScene(scene);
            
            newPersonDialogController.setDialogStage(dialogStage);
			
			dialogStage.showAndWait();
			
			return newPersonDialogController.isOkClicked();
		} catch(IOException e){
			e.printStackTrace();
			return false;
		}
	}
	
	public void changeLanguage(){
		if (getResourceBundle() == ResourceBundle.getBundle("Text_sk",Locale.FRENCH)){
			setResourceBundle(ResourceBundle.getBundle("Text",Locale.FRENCH));
		} else{
			setResourceBundle(ResourceBundle.getBundle("Text_sk",Locale.FRENCH));
		}
		schemeOverviewController.resetText();
	}
	
	public static void main(String[] args) {
		launch(args);
	}

	public Stage getPrimaryStage() {
		return primaryStage;
	}

	public ResourceBundle getResourceBundle() {
		return resourceBundle;
	}

	public void setResourceBundle(ResourceBundle resourceBundle) {
		this.resourceBundle = resourceBundle;
	}

	public FacadeRemoteUtil getFacadeRemoteUtil() {
		return facadeRemoteUtil;
	}

	public void setFacadeRemoteUtil(FacadeRemoteUtil facadeRemoteUtil) {
		this.facadeRemoteUtil = facadeRemoteUtil;
	}
}
